# You must change these to your own details.
[package]
authors = ["gifnksm <makoto.nksm+git@gmail.com>"]
categories = ["wasm"]
description = "Mahjang Tehai Viewer"
edition = "2018"
name = "mjview"
readme = "README.md"
version = "0.1.0"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.70"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
enum-iterator = "0.6.0"
thiserror = "1.0.23"
wee_alloc = {version = "0.4.5", optional = true}

# # The `web-sys` crate allows you to interact with the various browser APIs,
# # like the DOM.
# [dependencies.web-sys]
# version = "0.3.47"
# features = ["console"]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.6"

# These crates are used for running unit tests.
[dev-dependencies]
assert_matches = "1.4.0"
js-sys = "0.3.47"
wasm-bindgen-futures = "0.4.20"
wasm-bindgen-test = "0.3.20"
